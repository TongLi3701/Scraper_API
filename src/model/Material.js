/**
 * TeSS Write API
 * Create, update materials, events, packages, and workflows in TeSS.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TeSsWriteApi) {
      root.TeSsWriteApi = {};
    }
    root.TeSsWriteApi.Material = factory(root.TeSsWriteApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Material model module.
   * @module model/Material
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Material</code>.
   * @alias module:model/Material
   * @class
   * @param title {String} The title of the material
   * @param url {String} The url of the material
   * @param shortDescription {String} a short description of the material
   */
  var exports = function(title, url, shortDescription) {
    var _this = this;

    _this['title'] = title;
    _this['url'] = url;
    _this['short_description'] = shortDescription;







  };

  /**
   * Constructs a <code>Material</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Material} obj Optional instance to populate.
   * @return {module:model/Material} The populated <code>Material</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
      if (data.hasOwnProperty('short_description')) {
        obj['short_description'] = ApiClient.convertToType(data['short_description'], 'String');
      }
      if (data.hasOwnProperty('long_description')) {
        obj['long_description'] = ApiClient.convertToType(data['long_description'], 'String');
      }
      if (data.hasOwnProperty('doi')) {
        obj['doi'] = ApiClient.convertToType(data['doi'], 'String');
      }
      if (data.hasOwnProperty('keywords')) {
        obj['keywords'] = ApiClient.convertToType(data['keywords'], ['String']);
      }
      if (data.hasOwnProperty('contributors')) {
        obj['contributors'] = ApiClient.convertToType(data['contributors'], ['String']);
      }
      if (data.hasOwnProperty('authors')) {
        obj['authors'] = ApiClient.convertToType(data['authors'], ['String']);
      }
      if (data.hasOwnProperty('target_audience')) {
        obj['target_audience'] = ApiClient.convertToType(data['target_audience'], ['String']);
      }
      if (data.hasOwnProperty('content_provider_id')) {
        obj['content_provider_id'] = ApiClient.convertToType(data['content_provider_id'], 'String');
      }
    }
    return obj;
  }

  /**
   * The title of the material
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * The url of the material
   * @member {String} url
   */
  exports.prototype['url'] = undefined;
  /**
   * a short description of the material
   * @member {String} short_description
   */
  exports.prototype['short_description'] = undefined;
  /**
   * a long description of the material
   * @member {String} long_description
   */
  exports.prototype['long_description'] = undefined;
  /**
   * The DOI of the material(if it has one)
   * @member {String} doi
   * @default 'Not specified'
   */
  exports.prototype['doi'] = 'Not specified';
  /**
   * @member {Array.<String>} keywords
   */
  exports.prototype['keywords'] = undefined;
  /**
   * @member {Array.<String>} contributors
   */
  exports.prototype['contributors'] = undefined;
  /**
   * @member {Array.<String>} authors
   */
  exports.prototype['authors'] = undefined;
  /**
   * @member {Array.<String>} target_audience
   */
  exports.prototype['target_audience'] = undefined;
  /**
   * Shows the content provider of the materials
   * @member {module:model/Material.ContentProviderIdEnum} content_provider_id
   * @default '1'
   */
  exports.prototype['content_provider_id'] = '1';


  /**
   * Allowed values for the <code>content_provider_id</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ContentProviderIdEnum = {
    /**
     * value: "1"
     * @const
     */
    "1": "1",
    /**
     * value: "2"
     * @const
     */
    "2": "2",
    /**
     * value: "3，4，5"
     * @const
     */
    "3，4，5": "3，4，5"  };


  return exports;
}));


