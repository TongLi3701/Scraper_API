/**
 * TeSS Write API
 * Create, update materials, events, packages, and workflows in TeSS.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Material'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Material'));
  } else {
    // Browser globals (root is window)
    if (!root.TeSsWriteApi) {
      root.TeSsWriteApi = {};
    }
    root.TeSsWriteApi.MaterialsApi = factory(root.TeSsWriteApi.ApiClient, root.TeSsWriteApi.Material);
  }
}(this, function(ApiClient, Material) {
  'use strict';

  /**
   * Materials service.
   * @module api/MaterialsApi
   * @version 1.0.0
   */

  /**
   * Constructs a new MaterialsApi. 
   * @alias module:api/MaterialsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the materialsJsonPost operation.
     * @callback module:api/MaterialsApi~materialsJsonPostCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a new training material.
     * Users can add a new training material.
     * @param {Object} opts Optional parameters
     * @param {module:model/Material} opts.material The information of the materials.
     * @param {module:api/MaterialsApi~materialsJsonPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.materialsJsonPost = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['material'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/materials.json', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the materialsMaterialIdJsonPut operation.
     * @callback module:api/MaterialsApi~materialsMaterialIdJsonPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a training material
     * update the properties of the material.
     * @param {Number} materialId 
     * @param {Object} opts Optional parameters
     * @param {module:model/Material} opts.material The information of the materials.
     * @param {module:api/MaterialsApi~materialsMaterialIdJsonPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.materialsMaterialIdJsonPut = function(materialId, opts, callback) {
      opts = opts || {};
      var postBody = opts['material'];

      // verify the required parameter 'materialId' is set
      if (materialId === undefined || materialId === null) {
        throw new Error("Missing the required parameter 'materialId' when calling materialsMaterialIdJsonPut");
      }


      var pathParams = {
        'materialId': materialId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/materials/{materialId}.json', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
